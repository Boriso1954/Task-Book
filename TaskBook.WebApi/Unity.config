<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">

  
  <namespace name=" TaskBook.Services.Interfaces" />

  <assembly name="TaskBook.WebApi" />
  <assembly name="TaskBook.Services" />

  <!-- Logger -->
  <alias alias="ILogger" type="NLog.Mvc.ILogger, NLog.Mvc" />
  <alias alias="Logger" type="NLog.Mvc.Logger, NLog.Mvc" />

  <alias alias="ITraceWriter" type="System.Web.Http.Tracing.ITraceWriter, System.Web.Http" />
  <alias alias="NLogTracer" type="TaskBook.WebApi.Tracer.NLogTracer, TaskBook.WebApi" />
  
  <!-- Data Access Layer -->
  <alias alias="TaskBookDbContext" type="TaskBook.DataAccessLayer.TaskBookDbContext, TaskBook.DataAccessLayer" />
  <alias alias="TbDataReader" type="TaskBook.DataAccessLayer.Reader.TbDataReader, TaskBook.DataAccessLayer" />

  <alias alias="IReaderRepository" type="TaskBook.DataAccessLayer.Reader.IReaderRepository, TaskBook.DataAccessLayer" />
  <alias alias="ReaderRepository" type="TaskBook.DataAccessLayer.Reader.ReaderRepository, TaskBook.DataAccessLayer" />
  
  <alias alias="IProjectRepository" type="TaskBook.DataAccessLayer.Repositories.Interfaces.IProjectRepository, TaskBook.DataAccessLayer" />
  <alias alias="ProjectRepository" type="TaskBook.DataAccessLayer.Repositories.ProjectRepository, TaskBook.DataAccessLayer" />
  <alias alias="IProjectUsersRepository" type="TaskBook.DataAccessLayer.Repositories.Interfaces.IProjectUsersRepository, TaskBook.DataAccessLayer" />
  <alias alias="ProjectUsersRepository" type="TaskBook.DataAccessLayer.Repositories.ProjectUsersRepository, TaskBook.DataAccessLayer" />
  <alias alias="ITaskRepository" type="TaskBook.DataAccessLayer.Repositories.Interfaces.ITaskRepository, TaskBook.DataAccessLayer" />
  <alias alias="TaskRepository" type="TaskBook.DataAccessLayer.Repositories.TaskRepository, TaskBook.DataAccessLayer" />
  
  <alias alias="IProjectAccessService" type="TaskBook.Services.Interfaces.IProjectAccessService, TaskBook.Services" />
  <alias alias="ProjectAccessService" type="TaskBook.Services.ProjectAccessService, TaskBook.Services" />
  <alias alias="IUserService" type="TaskBook.Services.Interfaces.IUserService, TaskBook.Services" />
  <alias alias="UserService" type="TaskBook.Services.UserService, TaskBook.Services" />
  <alias alias="IProjectService" type="TaskBook.Services.Interfaces.IProjectService, TaskBook.Services" />
  <alias alias="ProjectService" type="TaskBook.Services.ProjectService, TaskBook.Services" />
  <alias alias="IPermissionService" type="TaskBook.Services.Interfaces.IPermissionService, TaskBook.Services" />
  <alias alias="PermissionService" type="TaskBook.Services.PermissionService, TaskBook.Services" />
  <alias alias="IRoleService" type="TaskBook.Services.Interfaces.IRoleService, TaskBook.Services" />
  <alias alias="RoleService" type="TaskBook.Services.RoleService, TaskBook.Services" />
  <alias alias="ITaskService" type="TaskBook.Services.Interfaces.ITaskService, TaskBook.Services" />
  <alias alias="TaskService" type="TaskBook.Services.TaskService, TaskBook.Services" />
  <alias alias="IEmailService" type="TaskBook.Services.Interfaces.IEmailService, TaskBook.Services" />
  <alias alias="EmailService" type="TaskBook.Services.EmailService, TaskBook.Services" />

  <alias alias="IUnitOfWork" type="TaskBook.DataAccessLayer.IUnitOfWork, TaskBook.DataAccessLayer" />
  <alias alias="UnitOfWork" type="TaskBook.DataAccessLayer.UnitOfWork, TaskBook.DataAccessLayer" />

  <container>
    <register type="TaskBookDbContext" mapTo="TaskBookDbContext" >
      <!-- New Each time -->
      <lifetime type="TransientLifetimeManager" />
    </register>

    <register type="IReaderRepository" mapTo="ReaderRepository" >
      <!-- New Each time -->
      <lifetime type="TransientLifetimeManager" />
    </register>

    <register type="TbDataReader" mapTo="TbDataReader" >
      <!-- New Each time -->
      <lifetime type="TransientLifetimeManager" />
    </register>

    <register type="IProjectRepository" mapTo="ProjectRepository" >
      <!-- New Each time -->
      <lifetime type="TransientLifetimeManager" />
    </register>

     <register type="IProjectUsersRepository" mapTo="ProjectUsersRepository" >
      <!-- New Each time -->
      <lifetime type="TransientLifetimeManager" />
    </register>
      
    <register type="ITaskRepository" mapTo="TaskRepository" >
      <!-- New Each time -->
      <lifetime type="TransientLifetimeManager" />
    </register>
      
    <register type="IUnitOfWork" mapTo="UnitOfWork" >
      <!-- New Each time -->
      <lifetime type="TransientLifetimeManager" />
    </register>
    
    <register type="IProjectAccessService" mapTo="ProjectAccessService" >
      <!-- New Each time -->
      <lifetime type="TransientLifetimeManager" />
    </register>
    
    <register type="IUserService" mapTo="UserService" >
      <!-- New Each time -->
      <lifetime type="TransientLifetimeManager" />
    </register>
  
    <register type="IProjectService" mapTo="ProjectService" >
      <!-- New Each time -->
      <lifetime type="TransientLifetimeManager" />
    </register>
  
    <register type="IPermissionService" mapTo="PermissionService" >
      <!-- New Each time -->
      <lifetime type="TransientLifetimeManager" />
    </register>
    
    <register type="IRoleService" mapTo="RoleService" >
      <!-- New Each time -->
      <lifetime type="TransientLifetimeManager" />
    </register>
    
     <register type="ITaskService" mapTo="TaskService" >
        <!-- New Each time -->
        <lifetime type="TransientLifetimeManager" />
      </register>
  
     <register type="IEmailService" mapTo="EmailService" >
        <!-- New Each time -->
        <lifetime type="TransientLifetimeManager" />
      </register>

      <register type="ILogger" mapTo="Logger" >
        <!-- New Each time -->
        <lifetime type="TransientLifetimeManager" />
      </register>
    
      <register type="ITraceWriter" mapTo="NLogTracer" >
        <!-- Singleton -->
        <lifetime type="ContainerControlledLifetimeManager" />
      </register>
    
    </container>
  
</unity>